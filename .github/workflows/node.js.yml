# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code,
# run tests, and then deploy the built application to GitHub Pages.
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Angular CI/CD for GitHub Pages

on:
  push:
    branches:
      - main # Trigger on push to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch
  workflow_dispatch: # Allows manual triggering from the GitHub Actions tab

# Set permissions for the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write # Needed for actions/checkout and for the deploy action to write to the gh-pages branch
  pages: write    # Needed by actions/deploy-pages to publish to GitHub Pages
  id-token: write # Needed for OpenID Connect (OIDC) for deploy-pages action

jobs:
  build-and-test:
    runs-on: ubuntu-latest # Specifies the runner environment

    strategy:
      matrix:
        node-version: [22.x] # Use Node.js 22.x (or compatible with your Angular version)
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Action to check out your source code

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4 # Action to set up the Node.js environment
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Cache npm dependencies for faster workflow runs

      - name: Install dependencies
        run: npm ci # Installs dependencies cleanly, ideal for CI environments

      - name: Build Angular app for production
        # --configuration=production: Builds the app with production optimizations.
        # --base-href=/YOUR_REPOSITORY_NAME/: CRUCIAL for GitHub Pages.
        # It sets the base URL for your Angular application.
        # Replace 'globaljobsupport.github.io' with your actual repository name
        # if it's different from the GitHub Pages root.
        run: npm run build -- --configuration=production --base-href=/globaljobsupport.github.io/

      - name: Run Unit Tests (Optional - uncomment if you have tests)
        # Assuming you have a 'test' script in package.json that runs tests headlessly (e.g., ChromeHeadless)
        # If your tests open a browser, they will fail in a CI environment without headless configuration.
        # run: npm test -- --no-watch --no-progress --browsers=ChromeHeadless

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3 # Uploads the build output as an artifact
        with:
          # This path must match the actual output directory of your Angular build.
          # Based on your previous output, it's 'dist/globaljobsupport'.
          # 'globaljobsupport' is usually the name of your Angular project as defined in angular.json.
          path: './dist/globaljobsupport'

  deploy:
    environment:
      name: github-pages # Defines the deployment environment as GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }} # The URL of the deployed site will be available here
    runs-on: ubuntu-latest # Specifies the runner environment for the deployment job
    needs: build-and-test # This job will only run after 'build-and-test' job completes successfully

    steps:
      - name: Deploy to GitHub Pages
        id: deployment # Gives an ID to this step to access its outputs (like the page_url)
        uses: actions/deploy-pages@v4 # The official action to deploy artifacts to GitHub Pages
        # No 'with' arguments needed here as it picks up the artifact uploaded by 'upload-pages-artifact'
